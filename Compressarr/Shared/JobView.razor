<MudExpansionPanel Class="job" DisableGutters="true" @bind-IsExpanded="isExpanded">
    <TitleContent>
        <MudText>
            @if (NewJob)
            {
                <MudAvatar Color="Color.Dark" Class="mr-3" Style="vertical-align: middle;">
                    <MudIcon Icon="@Icons.Outlined.PlaylistAdd" />
                </MudAvatar>
                @:New Job
            }
            else
            {
                @if (string.IsNullOrWhiteSpace(FilterType))
                {
                    <MudFab Size="Size.Small" Class="mr-3" Icon="@Icons.Outlined.Sync" Color="Color.Tertiary" />
                }
                else if (Job.MediaSource == MediaSource.Folder)
                {
                    <MudAvatar Color="Color.Tertiary" Class="mr-3" Style="vertical-align: middle;">
                        <MudIcon Icon="@Icons.Outlined.FolderOpen" />
                    </MudAvatar>
                }
                else
                {
                    //<MudAvatar Color="Color.Transparent" Rounded="true" Image="@FilterImageSrc" Style="vertical-align: middle;" Class="mr-3" />
                    <img src="@FilterImageSrc" style="width: 40px; height: auto; vertical-align: middle; margin-right: 12px;" />
                }
                @:@(Job.Filter?.Name ?? "Folder") | @Job.Preset => @Job.DestinationFolder
                <MudChip Color="@ButtonColour">@ButtonText</MudChip>
            }
        </MudText>
    </TitleContent>
    <ChildContent>
        <MudCard Elevation="0">
            @if (!Editing)
            {
                <CardHeader Title="Workload" HelpURL="https://github.com/OFark/Compressarr/wiki/Jobs#a-job">
                    @if (!NewJob)
                    {
                        <MudButton Color="Color.Warning" StartIcon="@Icons.Material.Outlined.Sync" Disabled="@(!Job.Condition.SafeToInitialise)" @onclick="ReInitialise">Re-Initialise</MudButton>
                        <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Edit" Disabled="@(!Job.Condition.SafeToInitialise)" @onclick="() => { editJob = !editJob; }" Class="mr-4">Edit</MudButton>
                    }
                </CardHeader>
            }
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12">
                        @if (Editing)
                        {
                            <MudForm @ref="jobEditorForm">
                                <MudCard Class="mb-3">
                                    <CardHeader Title="Workload" HelpURL="https://github.com/OFark/Compressarr/wiki/Jobs#new-job"></CardHeader>
                                    <MudCardContent>
                                        <MudList Dense="true">
                                            <MudListItem>
                                                <MudSelect Strict="true" Required="true" Label="Source" @bind-Value="JobFilterID" OffsetY="true">
                                                    @foreach (var c in FilterManager.Filters.Where(x => x.MediaSource == MediaSource.Radarr))
                                                        {
                                                        <MudSelectItem Value="@c.ID.ToString()">
                                                            <img src="https://raw.githubusercontent.com/Radarr/Radarr/develop/Logo/Radarr.svg" alt="Radarr logo" height="23" style="vertical-align: middle; margin-right: 0.5em;" />
                                                            @c.Name
                                                        </MudSelectItem>
                                                        }
                                                    @if (FilterManager.Filters.Where(x => x.MediaSource == MediaSource.Radarr).Any() &&
                                                    FilterManager.Filters.Where(x => x.MediaSource == MediaSource.Sonarr).Any())
                                                        {
                                                        <MudDivider />
                                                        }
                                                    @foreach (var c in FilterManager.Filters.Where(x => x.MediaSource == MediaSource.Sonarr))
                                                        {
                                                        <MudSelectItem Value="@c.ID.ToString()">
                                                            <img src="https://raw.githubusercontent.com/Sonarr/Sonarr/develop/Logo/Sonarr.svg" alt="Sonarr Logo" height="23" style="vertical-align: middle; margin-right: 0.5em;" />
                                                            @c.Name
                                                        </MudSelectItem>
                                                        }
                                                    <MudSelectItem Value="@("folder")">Folder&hellip;</MudSelectItem>
                                                </MudSelect>
                                            </MudListItem>
                                            @if (showFolderSource)
                                            {
                                                <MudListItem>
                                                    <DirectoryLookup Label="Source Folder" Required="true" @bind-Folder="@Job.SourceFolder" />
                                                </MudListItem>
                                            }
                                            <MudListItem>
                                                <MudSelect Required="true" Label="FFmpeg Preset" @bind-Value="Job.Preset" OffsetY="true">
                                                    @foreach (var c in PresetManager.Presets)
                                                        {
                                                        <MudSelectItem Value="c" />
                                                        }
                                                </MudSelect>
                                            </MudListItem>
                                            <MudListItem>
                                                <DirectoryLookup @bind-Folder="@Job.DestinationFolder" Label="Destination Folder" Required="true" />
                                            </MudListItem>
                                        </MudList>
                                    </MudCardContent>
                                </MudCard>
                                <MudCard Class="mb-3">
                                    <CardHeader Title="FFmpeg Options" HelpURL="https://github.com/OFark/Compressarr/wiki/Jobs#ffmpeg-options"></CardHeader>
                                    <MudCardContent>
                                        <MudList Dense="true">
                                            @if (Job.Preset?.VideoBitRateAutoCalc ?? false)
                                            {
                                                <MudListItem>
                                                    <MudSelect Dense="true" @bind-Value="@Job.ArgumentCalculationSettings.VideoBitRateTargetSSIM" Label="Bit Rate Target" OffsetY="true">
                                                        <MudSelectItem Value="false">Target Compression</MudSelectItem>
                                                        <MudSelectItem Value="true">Target SSIM</MudSelectItem>
                                                    </MudSelect>
                                                </MudListItem>
                                                <MudListItem>
                                                    <MudNumericField @bind-Value="@VideoBitRateTarget" Min="1" Max="100" Label="Target Percentage" Adornment="Adornment.End" AdornmentText="%" Required="true" />
                                                </MudListItem>
                                            }
                                            <MudListItem>
                                                <MudSelect Dense="true" @bind-Value="@Job.ArgumentCalculationSettings.AutoCalculationType" Label="Auto Calculation Type" OffsetY="true">
                                                    @foreach (AutoCalcType r in Enum.GetValues(typeof(AutoCalcType)))
                                                        {
                                                        <MudSelectItem Value="r">@r.ToString().Humanize()</MudSelectItem>
                                                        }
                                                </MudSelect>
                                            </MudListItem>
                                            <MudListItem>
                                                <MudNumericField @bind-Value="@Job.ArgumentCalculationSettings.ArgCalcSampleSeconds" Min="1" Label="Sample length (Seconds)" Required="true" />
                                            </MudListItem>

                                            @if (Job.ArgumentCalculationSettings.AutoCalculationType == AutoCalcType.FirstPastThePost)
                                            {
                                                <MudListItem>
                                                    <MudNumericField Style="" @bind-Value="MinSSIMPost" Label="Minimum SSIM" Min="0" Max="100" Adornment="Adornment.End" AdornmentText="%" Required="true" />
                                                </MudListItem>
                                            }

                                            @if (Job.ArgumentCalculationSettings.AutoCalculationType == AutoCalcType.HappyMedium)
                                            {
                                                <MudListItem>
                                                    <MudNumericField Style="" @bind-Value="MaxCompPost" Label="Minimum Compression" Min="0" Max="100" Adornment="Adornment.End" AdornmentText="%" Required="true" />
                                                </MudListItem>
                                                <MudListItem>
                                                    <MudNumericField Style="" @bind-Value="MinSSIMPost" Label="But SSIM must reach" Min="0" Max="100" Adornment="Adornment.End" AdornmentText="%" Required="true" />
                                                </MudListItem>
                                            }

                                        </MudList>
                                    </MudCardContent>
                                </MudCard>
                                <MudCard Class="mb-3">
                                    <CardHeader Title="Post-Processing" HelpURL="https://github.com/OFark/Compressarr/wiki/Jobs#post-processing"></CardHeader>
                                    <MudCardContent>
                                        <MudList Dense="true">
                                            <MudListItem>
                                                <MudSwitch Color="Color.Secondary" @bind-Checked="@Job.ArgumentCalculationSettings.AlwaysCalculateSSIM" Label="Always calculate SSIM after encoding" />
                                            </MudListItem>
                                            <MudListItem>
                                                <MudSwitch Color="Color.Secondary" @bind-Checked="Job.AutoImport" Label="Auto Import"></MudSwitch>
                                            </MudListItem>
                                            <MudListItem>
                                                <MudNumericField Style="" @bind-Value="MinSSIM" Label="Minimum SSIM" Min="0" Max="100" Adornment="Adornment.End" AdornmentText="%" Disabled="!Job.AutoImport" />
                                            </MudListItem>
                                            <MudListItem>
                                                <MudNumericField @bind-Value="MaxComp" Label="Maximum Compression" Min="0" Max="100" Adornment="Adornment.End" AdornmentText="%" Disabled="!Job.AutoImport" />
                                            </MudListItem>
                                        </MudList>
                                    </MudCardContent>
                                </MudCard>
                            </MudForm>
                        }
                        else
                        {
                            @if (Job.WorkLoad != null)
                            {
                                <MudTable Items="Job.WorkLoad" Striped="true" Dense="true">
                                    <HeaderContent>
                                        <MudTh></MudTh>
                                        <MudTh>Name</MudTh>
                                        <MudTh>Percent</MudTh>
                                        <MudTh>ETA</MudTh>
                                        <MudTh>Frame</MudTh>
                                        <MudTh>FPS</MudTh>
                                        <MudTh>Q</MudTh>
                                        <MudTh>Size</MudTh>
                                        <MudTh>Time</MudTh>
                                        <MudTh>Length</MudTh>
                                        <MudTh>Bitrate</MudTh>
                                        <MudTh>Speed</MudTh>
                                        <MudTh>Finished</MudTh>
                                        @if (Job.AutoImport)
                                        {
                                            <MudTh>Imported</MudTh>
                                        }
                                        <MudTh>SSIM</MudTh>
                                        <MudTh>Compression</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        <MudTd>
                                            <MudText>
                                                <MudIconButton Size="Size.Small" Icon="@(context.ShowDetails ? Icons.Outlined.Cancel : Icons.Outlined.Info)" OnClick="@(async () => await ToggleDetails(context))"></MudIconButton>
                                                @if (context.Condition.Processing.Processing)
                                                        {
                                                    <MudProgressCircular Class="ml-2" Style="vertical-align: middle;" Size="Size.Small" Indeterminate="true" Color="Color.Secondary" />
                                                        }
                                            </MudText>
                                        </MudTd>
                                        <MudTd DataLabel="Name">@context.SourceFileName</MudTd>
                                        <MudTd DataLabel="Percent"><MudText Align="Align.Center">@context.Percent.Adorn("%")</MudText></MudTd>
                                        <MudTd DataLabel="ETA"><MudText Align="Align.Center">@context.ETA?.Humanize(minUnit: Humanizer.Localisation.TimeUnit.Second)</MudText></MudTd>
                                        <MudTd DataLabel="Frame"><MudText Align="Align.Center">@context.Frame</MudText></MudTd>
                                        <MudTd DataLabel="FPS"><MudText Align="Align.Center">@context.FPS</MudText></MudTd>
                                        <MudTd DataLabel="Q"><MudText Align="Align.Center">@context.Q</MudText></MudTd>
                                        <MudTd DataLabel="Size"><MudText Align="Align.Center">@context.Size</MudText></MudTd>
                                        <MudTd DataLabel="Time"><MudText Align="Align.Center">@context.EncodingDuration?.ToStringTimeSeconds()</MudText></MudTd>
                                        <MudTd DataLabel="Length"><MudText Align="Align.Center">@context.TotalLength?.ToStringTimeSeconds()</MudText></MudTd>
                                        <MudTd DataLabel="Bitrate"><MudText Align="Align.Center">@context.Bitrate</MudText></MudTd>
                                        <MudTd DataLabel="Speed"><MudText Align="Align.Center">@context.Speed</MudText></MudTd>
                                        <MudTd DataLabel="Finished">
                                            <MudText Align="Align.Center">
                                                @if (context.Condition.HasFinished)
                                                        {
                                                            if (context.Condition.OutputCheck.Succeeded)
                                                            {
                                                        <MudIcon Color="Color.Success" Icon="@Icons.Material.Outlined.Check" />
                                                            }
                                                            else
                                                            {
                                                        <MudIcon Color="Color.Error" Icon="@Icons.Material.Outlined.Error" />
                                                            }
                                                        }
                                            </MudText>
                                        </MudTd>
                                        @if (Job.AutoImport)
                                                {
                                            <MudTd DataLabel="Imported">
                                                <MudText Align="Align.Center">
                                                    @if (context.Condition.Import.Finished)
                                                            {
                                                                if (context.Condition.Import.Succeeded)
                                                                {
                                                            <MudIcon Color="Color.Success" Icon="@Icons.Material.Outlined.Check" />
                                                                }
                                                                else
                                                                {
                                                            <MudIcon Color="Color.Error" Icon="@Icons.Material.Outlined.Error" />
                                                                }
                                                            }
                                                </MudText>
                                            </MudTd>
                                                }
                                        @if (context.SSIM.HasValue)
                                                {
                                            <MudTd DataLabel="SSIM"><MudText Align="Align.Center">@context.SSIM.ToPercent(2).Adorn("%")</MudText></MudTd>
                                                }
                                                else
                                                {
                                            <MudTd DataLabel="SSIM"><MudText Align="Align.Center">@context.PercentSSIM.Adorn("%")</MudText></MudTd>
                                                }
                                        <MudTd DataLabel="Compression"><MudText Align="Align.Center">@context.Compression.ToPercent(2).Adorn("%")</MudText></MudTd>
                                    </RowTemplate>
                                    <ChildRowContent>
                                        @if (context.ShowDetails)
                                                {
                                            <MudTr>
                                                <MudTd colspan="14">
                                                    <MudTabs PanelClass="pa-4" Position="Position.Left">
                                                        <MudTabPanel Icon="@Icons.Outlined.CheckCircleOutline" Text="Analyse">
                                                            <MudCard>
                                                                <MudCardActions>
                                                                    <MudButton Disabled="context.Media.FFProbeMediaInfo != null" Variant="Variant.Outlined" Class="mr-2" Color="Color.Info" StartIcon="@Icons.Rounded.PlayArrow" OnClick="@(() => GetMediaInfo(context))">Get Media Info</MudButton>
                                                                    <MudButton Disabled="DisableCancelMediaInfoButton" Variant="Variant.Outlined" StartIcon="@Icons.Rounded.Cancel" Color="Color.Error" OnClick="@(() => CancelProcessing(context))">Cancel</MudButton>
                                                                </MudCardActions>
                                                                <MudCardContent>
                                                                    @if (context.Media.FFProbeMediaInfo != null)
                                                                            {
                                                                        <MudTreeView Dense="true" ExpandOnClick="true" Items="@context.Media.FFProbeTreeView" Context="mediaInfo">
                                                                            <ItemTemplate>
                                                                                <MudTreeViewItem @bind-Expanded="@mediaInfo.IsExpanded" Items="@mediaInfo.TreeItems" Text="@($"{mediaInfo.Title.Humanize(LetterCasing.Title)}{mediaInfo.Value.Wrap(": {0}")}")" />
                                                                            </ItemTemplate>
                                                                        </MudTreeView>
                                                                            }
                                                                </MudCardContent>
                                                            </MudCard>
                                                        </MudTabPanel>
                                                        <MudTabPanel Icon="@Icons.Outlined.PlaylistAdd" Text="Arguments">
                                                            <MudCard>
                                                                <MudCardActions>
                                                                    <MudToolBar Style="width: 100%;">
                                                                        <MudButton Disabled="context.Condition.Prepare.Processing" Variant="Variant.Outlined" Class="mr-2" StartIcon="@Icons.Rounded.PlayArrow" Color="Color.Secondary" OnClick="@(() => PrepareWorkItem(context))">Get FFmpeg Arguments</MudButton>
                                                                        <MudButton Disabled="context.Condition.Prepare.Processing" Variant="Variant.Outlined" Class="mr-2" StartIcon="@Icons.Rounded.ClearAll" Color="Color.Warning" OnClick="@(() => ClearAutoCalcHistory(context))">Clear History</MudButton>
                                                                        <MudSpacer />
                                                                        <MudButton Disabled="!context.Condition.Prepare.Processing" Variant="Variant.Outlined" StartIcon="@Icons.Rounded.Cancel" Color="Color.Error" OnClick="@(() => CancelProcessing(context))">Cancel</MudButton>
                                                                    </MudToolBar>
                                                                </MudCardActions>
                                                                <MudCardContent>
                                                                    @if (context.ArgumentCalculator?.AutoCalcVideoEncoderOptions != null && ((context.ArgumentCalculator?.AutoCalcVideoEncoderOptions.Any() ?? false) || (context.ArgumentCalculator?.VideoBitRateCalculator?.SampleResults.Any() ?? false)))
                                                                            {
                                                                        <MudText>Calculating the best settings from a sample. Actual results may vary.</MudText>
                                                                        <MudSimpleTable Dense="true">
                                                                            <thead>
                                                                                @if (context.ArgumentCalculator.Preset.VideoBitRateAutoCalc)
                                                                                        {
                                                                                    <MudTd>BitRate</MudTd>
                                                                                        }
                                                                                @foreach (var arg in context.ArgumentCalculator.AutoCalcVideoEncoderOptions)
                                                                                        {
                                                                                    <MudTd>@arg.EncoderOption.Arg</MudTd>
                                                                                        }
                                                                            </thead>
                                                                            <tbody>
                                                                                <MudTr>
                                                                                    @if (context.ArgumentCalculator.Preset.VideoBitRateAutoCalc)
                                                                                            {
                                                                                        <MudTd valign="top">
                                                                                            @if (context.ArgumentCalculator?.VideoBitRateCalculator?.SampleResults.Any() ?? false)
                                                                                                    {
                                                                                                <MudTable Dense="true" Items="context.ArgumentCalculator?.VideoBitRateCalculator?.SampleResults" Style="vertical-align: auto">
                                                                                                    <HeaderContent>
                                                                                                        <MudTh>Bitrate</MudTh>
                                                                                                        <MudTh>Compression</MudTh>
                                                                                                        <MudTh>SSIM</MudTh>
                                                                                                        <MudTh>Speed</MudTh>
                                                                                                    </HeaderContent>
                                                                                                    <RowTemplate Context="TestContext">
                                                                                                        @if (TestContext != null)
                                                                                                                {
                                                                                                            <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">@(((int)TestContext.ArgumentValue).ToBitRate() ?? "Default")</MudTd>
                                                                                                            <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                                @if (TestContext.Compression > 0)
                                                                                                                        {
                                                                                                                    @:@TestContext.Compression.ToPercent(2).Adorn("%")
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                    <MudProgressLinear Color="Color.Dark" Value="@TestContext.EncodingProgress" />
                                                                                                                        }
                                                                                                            </MudTd>
                                                                                                            <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                                @if (@TestContext.SSIM > 0)
                                                                                                                        {
                                                                                                                    @TestContext.SSIM.ToPercent(2).Adorn("%");
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                    <MudProgressLinear Color="Color.Dark" Value="@TestContext.SSIMProgress" />
                                                                                                                        }
                                                                                                            </MudTd>
                                                                                                            <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                                @if (@TestContext.Speed > 0)
                                                                                                                        {
                                                                                                                    @TestContext.Speed.Adorn("x");
                                                                                                                        }
                                                                                                            </MudTd>
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                            <MudTd>@TestContext.ArgumentValue</MudTd>
                                                                                                            <MudTd>&nbsp;</MudTd>
                                                                                                            <MudTd>&nbsp;</MudTd>
                                                                                                                }
                                                                                                    </RowTemplate>
                                                                                                </MudTable>
                                                                                                    }
                                                                                        </MudTd>
                                                                                            }
                                                                                    @foreach (var arg in context.ArgumentCalculator.AutoCalcVideoEncoderOptions)
                                                                                            {
                                                                                        <MudTd valign="top">
                                                                                            <MudTable Dense="true" Items="arg.AutoPresetTests" Class="@(arg.HasSettled ? "mud-alert-outlined-secondary" : "")" Style="vertical-align: auto">
                                                                                                <HeaderContent>
                                                                                                    <MudTh>val</MudTh>
                                                                                                    <MudTh>Compression</MudTh>
                                                                                                    <MudTh>SSIM</MudTh>
                                                                                                    <MudTh>Speed</MudTh>
                                                                                                </HeaderContent>
                                                                                                <RowTemplate Context="TestContext">
                                                                                                    @if (TestContext != null)
                                                                                                            {
                                                                                                        <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">@(TestContext.ArgumentValue ?? "Default")</MudTd>
                                                                                                        <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                            @if (TestContext.Compression > 0)
                                                                                                                    {
                                                                                                                @:@TestContext.Compression.ToPercent(2).Adorn("%")
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                <MudProgressLinear Color="Color.Dark" Value="@TestContext.EncodingProgress" />
                                                                                                                    }
                                                                                                        </MudTd>
                                                                                                        <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                            @if (@TestContext.SSIM > 0)
                                                                                                                    {
                                                                                                                @TestContext.SSIM.ToPercent(2).Adorn("%");
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                <MudProgressLinear Color="Color.Dark" Value="@TestContext.SSIMProgress" />
                                                                                                                    }
                                                                                                        </MudTd>
                                                                                                        <MudTd Class="@(TestContext.Best ? "mud-theme-secondary" : "")">
                                                                                                            @if (@TestContext.Speed > 0)
                                                                                                                    {
                                                                                                                @TestContext.Speed.Adorn("x");
                                                                                                                    }
                                                                                                        </MudTd>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                        <MudTd>@TestContext.ArgumentValue</MudTd>
                                                                                                        <MudTd>&nbsp;</MudTd>
                                                                                                        <MudTd>&nbsp;</MudTd>
                                                                                                            }
                                                                                                </RowTemplate>
                                                                                            </MudTable>
                                                                                        </MudTd>
                                                                                            }
                                                                                </MudTr>
                                                                            </tbody>
                                                                        </MudSimpleTable>
                                                                            }
                                                                </MudCardContent>
                                                            </MudCard>
                                                        </MudTabPanel>
                                                        <MudTabPanel Icon="@Icons.Rounded.PlayCircleOutline" Text="Encode">
                                                            <MudCard>
                                                                <MudCardActions>
                                                                    <MudButton Disabled="!context.Condition.Prepare.Succeeded || context.Condition.Encode.Started" Variant="Variant.Outlined" Class="mr-2" Color="Color.Primary" OnClick="@(() => ProcessWorkItem(context))" StartIcon="@Icons.Rounded.PlayArrow">Encode Video</MudButton>
                                                                    <MudButton Disabled="!context.Condition.CreatingVideo" Variant="Variant.Outlined" StartIcon="@Icons.Rounded.Cancel" Color="Color.Error" OnClick="@(() => CancelProcessing(context))">Cancel</MudButton>
                                                                </MudCardActions>
                                                                <MudCardContent>
                                                                    @if (context.Arguments != null)
                                                                            {
                                                                        <MudList Dense="true" Class="my-3">
                                                                            @foreach (var arg in context.Arguments)
                                                                                    {
                                                                                <MudListItem>@arg</MudListItem>
                                                                                    }
                                                                        </MudList>
                                                                            }
                                                                </MudCardContent>
                                                            </MudCard>
                                                        </MudTabPanel>
                                                        <MudTabPanel Icon="@Icons.Rounded.CloudUpload" Text="Import">
                                                            <MudCard>
                                                                <MudCardActions>
                                                                    <MudButton Disabled="!context.Condition.HappyEncode" Variant="Variant.Outlined" Class="mr-2" Color="Color.Tertiary" OnClick="@(() => ImportVideo(context))" StartIcon="@Icons.Rounded.CloudUpload">Import to @Job.Filter?.MediaSource.ToString()</MudButton>
                                                                    <MudButton Disabled="!context.Condition.Import.Processing" Variant="Variant.Outlined" StartIcon="@Icons.Rounded.Cancel" Color="Color.Error" OnClick="@(() => CancelProcessing(context))">Cancel</MudButton>
                                                                </MudCardActions>
                                                                <MudCardContent>
                                                                </MudCardContent>
                                                            </MudCard>
                                                        </MudTabPanel>
                                                        <MudTabPanel Icon="@Icons.Filled.FeaturedPlayList" Text="Log">
                                                            @if (context.Console != null)
                                                                    {
                                                                <MudPaper Outlined="false" Square="true" class="jobEventsScrollWrapper">
                                                                    <MudPaper Square="true" Class="mud-theme-dark pa-2 jobEvents">
                                                                        <pre>
                                                                        @foreach (var e in context.Console)
                                                                                {
                                                                        <MudText Class="event" Color="e.Color" Typo="Typo.body2">@e.Message</MudText>
                                                                                }
                                                                        </pre>
                                                                    </MudPaper>
                                                                </MudPaper>
                                                                    }
                                                        </MudTabPanel>
                                                    </MudTabs>
                                                </MudTd>
                                            </MudTr>
                                                }
                                    </ChildRowContent>
                                    <PagerContent>
                                        <MudTablePager PageSizeOptions="new int[]{5, 10, 50, 100}" />
                                    </PagerContent>
                                </MudTable>
                                <MudPaper Class="mt-2" Elevation="0">
                                    <MudProgressLinear Color="Color.Primary" Value="initialisationProgress" />
                                </MudPaper>
                                @if (!NewJob)
                                {
                                    <MudButton Variant="Variant.Filled" Class="my-3" FullWidth="true" Color="@ButtonColour" @onclick="StartJob" @onmouseover="() => { mouseOnButton = true; }" @onmouseout="() => { mouseOnButton = false; }">@ButtonText</MudButton>
                                }
                            }
                            else
                            {
                                <MudSkeleton Width="100%" Height="30px" />
                                <MudSkeleton Width="20%" />
                                <MudSkeleton Width="30%" />
                                <MudSkeleton Width="18%" />
                                <MudSkeleton Width="35%" />
                            }
                        }
                    </MudItem>
                    <MudItem xs="12">
                        @if (Job.Events?.Any() ?? false)
                        {
                            <MudText Typo="Typo.h5"><MudIcon Icon="@Icons.Outlined.Article" Color="Color.Primary" /> Log</MudText>
                            <MudPaper Outlined="false" Square="true" class="jobEventsScrollWrapper">
                                <MudPaper Square="true" Class="mud-theme-dark pa-2 jobEvents">
                                    @if (Job.Events != null)
                                    {
                                        <pre>
                                            @foreach (var e in Job.Events)
                                            {
                                        <MudText Class="event" Color="e.Color" Typo="Typo.body2">@e.Date.ToString("HH:mm:ss") - @e.Message</MudText>
                                            }
                                             </pre>
                                    }
                                </MudPaper>
                            </MudPaper>
                        }
                        else if (!NewJob)
                        {
                            <MudSkeleton Width="10%" />
                            <MudSkeleton Width="100%" Height="195px" />
                        }
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions Class="px-4">
                @if (Editing)
                {
                    <MudButton @onclick="SaveJob" Size="Size.Large" Disabled="@(!SaveEnabled)" Color="Color.Primary" StartIcon="@Icons.Material.Outlined.Save">Save</MudButton>
                    <MudSpacer />
                    @if (!NewJob)
                    {
                        <MudButton @onclick="DeleteJob" Color="Color.Error" Class="ml-3" StartIcon="@Icons.Material.Outlined.Delete">Delete</MudButton>
                        <MudButton @onclick="() => { editJob = !editJob; }" Color="Color.Warning" Class="ml-3" StartIcon="@Icons.Material.Outlined.Cancel">Cancel</MudButton>
                        @if (canReload)
                        {
                            <MudButton StartIcon="@Icons.Material.Outlined.Refresh" Color="Color.Secondary" @onclick="ReloadJob">Reload</MudButton>
                        }
                    }

                }
            </MudCardActions>
        </MudCard>
    </ChildContent>
</MudExpansionPanel>

@code {



}
